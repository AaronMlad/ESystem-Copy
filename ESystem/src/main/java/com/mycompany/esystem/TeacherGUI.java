/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.esystem;

import javax.swing.table.DefaultTableModel;

/**
 *
 * @author amalda
 */
public class TeacherGUI extends javax.swing.JFrame {

    /**
     * Creates new form TeacherGUI
     */
    public TeacherGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        teachAdd = new javax.swing.JTextField();
        teachContact = new javax.swing.JTextField();
        teachDept = new javax.swing.JTextField();
        Save = new javax.swing.JButton();
        teachId = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Delete = new javax.swing.JButton();
        Update = new javax.swing.JButton();
        teachName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        teachTable = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        assignTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        assignSubj = new javax.swing.JButton();
        deleteSubj = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        teachAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teachAddActionPerformed(evt);
            }
        });

        teachContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teachContactActionPerformed(evt);
            }
        });

        teachDept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teachDeptActionPerformed(evt);
            }
        });

        Save.setText("Save");
        Save.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SaveMouseClicked(evt);
            }
        });
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });

        teachId.setEditable(false);
        teachId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teachIdActionPerformed(evt);
            }
        });

        jLabel1.setText("ID:");

        jLabel2.setText("Name:");

        jLabel3.setText("Address");

        jLabel4.setText("Contact:");

        jLabel5.setText("Department:");

        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        Update.setText("Update");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });

        teachName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teachNameActionPerformed(evt);
            }
        });

        teachTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Address", "Contact", "Department"
            }
        ));
        teachTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                teachTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(teachTable);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(30, 0, 255));
        jLabel7.setText("Teachers Form");

        assignTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "SubjID", "SubjCode", "SubjUnits ", "SubjSched", "SubjDesc"
            }
        ));
        assignTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                assignTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(assignTable);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setText("Assigned Subjects");

        assignSubj.setText("Assign Subject");
        assignSubj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignSubjActionPerformed(evt);
            }
        });

        deleteSubj.setText("Delete Subject");
        deleteSubj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteSubjActionPerformed(evt);
            }
        });

        jMenu1.setText("Form");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        jMenuItem1.setText("Students");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Subjects");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(teachName)
                                    .addComponent(teachAdd)
                                    .addComponent(teachContact)
                                    .addComponent(teachDept)
                                    .addComponent(teachId, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(jLabel7))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(assignSubj)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Save)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Delete))
                            .addComponent(deleteSubj))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Update)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 502, Short.MAX_VALUE)
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(teachId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(teachName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(teachAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(teachContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(teachDept, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Update)
                            .addComponent(Delete)
                            .addComponent(Save)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(assignSubj)
                        .addGap(18, 18, 18)
                        .addComponent(deleteSubj)
                        .addGap(155, 155, 155))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jMenu1ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        StudentGUI student = new StudentGUI();
        student.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        SubjectGUI subject = new SubjectGUI();
        subject.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void teachAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teachAddActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_teachAddActionPerformed

    private void teachContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teachContactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_teachContactActionPerformed

    private void teachDeptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teachDeptActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_teachDeptActionPerformed

    private void SaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SaveMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_SaveMouseClicked

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        Teachers teach = new Teachers();
        teach.SaveRecord(teachName.getText(), teachAdd.getText(), teachContact.getText(), teachDept.getText());
        showRecords();
    }//GEN-LAST:event_SaveActionPerformed

    private void teachIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teachIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_teachIdActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        showRecords();
        Teachers teach = new Teachers();
        teach.DeleteRecord(Integer.valueOf(teachId.getText()));
        showRecords();
    }//GEN-LAST:event_DeleteActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        showRecords();
        Teachers teach = new Teachers();
        teach.UpdateRecord(Integer.valueOf(teachId.getText()), teachName.getText(), teachAdd.getText(), teachContact.getText(), teachDept.getText());
        showRecords();
    }//GEN-LAST:event_UpdateActionPerformed

    private void teachNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teachNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_teachNameActionPerformed

    private void teachTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_teachTableMouseClicked
        int row = teachTable.rowAtPoint(evt.getPoint());
        if (row >= 0) {
            teachId.setText(teachTable.getValueAt(row,0).toString());
            teachName.setText(teachTable.getValueAt(row,1).toString());
            teachAdd.setText(teachTable.getValueAt(row,2).toString());
            teachContact.setText(teachTable.getValueAt(row,3).toString());
            teachDept.setText(teachTable.getValueAt(row,4).toString());
        }
        
        SubjectGUI.selectedTeacherId = Integer.parseInt(teachTable.getValueAt(row,0).toString());
        showAssignRec();
    }//GEN-LAST:event_teachTableMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        showRecords();
        Teachers teach = new Teachers();
        teach.LoadRecords();
    }//GEN-LAST:event_formWindowOpened

    private void assignSubjActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignSubjActionPerformed
        if (SubjectGUI.selectedTeacherId == -1) {
            javax.swing.JOptionPane.showMessageDialog(this, "Please select a teacher first.");
            return;
        }
        
        if (SubjectGUI.selectedSubjectId == -1) {
            javax.swing.JOptionPane.showMessageDialog(this, "Please select a subject first from the Subject Form.");
            return;
        }
        
        Assign assign = new Assign();
        assign.DBConnect();
        assign.setAssignSubjId(SubjectGUI.selectedSubjectId);
        
        String result = assign.assignSubject(SubjectGUI.selectedTeacherId);
        javax.swing.JOptionPane.showMessageDialog(this, result);
        
        showAssignRec();
    }//GEN-LAST:event_assignSubjActionPerformed

    private void deleteSubjActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteSubjActionPerformed
        if (SubjectGUI.selectedTeacherId == -1) {
            javax.swing.JOptionPane.showMessageDialog(this, "Please select a teacher first.");
            return;
        }
        
        if (SubjectGUI.selectedAssignSubjectId == -1) {
            javax.swing.JOptionPane.showMessageDialog(this, "Please select a subject from the Assigned Subjects table first.");
            return;
        }
        
        Assign delete = new Assign();
        delete.DBConnect();
        delete.setAssignSubjId(SubjectGUI.selectedAssignSubjectId);
        
        String result = delete.deleteSubject(SubjectGUI.selectedTeacherId);
        javax.swing.JOptionPane.showMessageDialog(this, result);
        
        showAssignRec();
    }//GEN-LAST:event_deleteSubjActionPerformed

    private void assignTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_assignTableMouseClicked
        int row = assignTable.rowAtPoint(evt.getPoint());
        if (row >= 0) {
            // Store selected subject ID from assignTable
            SubjectGUI.selectedAssignSubjectId = Integer.parseInt(assignTable.getValueAt(row,0).toString());
        }
    }//GEN-LAST:event_assignTableMouseClicked

    public void showRecords() {
        DefaultTableModel tblmodel = (DefaultTableModel) teachTable.getModel();
        tblmodel.setRowCount(0);
        ESystem show = new ESystem();
        show.DBConnect();
        try {
            String query = "SELECT * FROM Teachers;";
            show.rs = show.st.executeQuery(query);
            while (show.rs.next()) {
                String id = show.rs.getString("tid");
                String name = show.rs.getString("tname");
                String address = show.rs.getString("tadd");
                String contact = show.rs.getString("tcontact");
                String dept = show.rs.getString("tdept");

                String[] item = {id, name, address, contact, dept};
                tblmodel.addRow(item);
                }
            } catch (Exception ex) {
                System.out.println(ex);
            }
    }
    
    private void showAssignRec() {
    DefaultTableModel model = (DefaultTableModel) assignTable.getModel();
    model.setRowCount(0);
    
    if (SubjectGUI.selectedTeacherId == -1) {
        return;
    }
    
    ESystem show = new ESystem();
    show.DBConnect();
    try {
        String query = "SELECT * FROM Subjects " +
                       "JOIN Assign ON Subjects.subjid = Assign.subjid " +
                       "WHERE Assign.tid = " + SubjectGUI.selectedTeacherId;
        
        show.rs = show.st.executeQuery(query);
        
        while (show.rs.next()) {
            String subjectId = show.rs.getString("subjid");
            String code = show.rs.getString("subjcode");
            String schedule = show.rs.getString("subjsched");
            String units = show.rs.getString("subjunits");
            String description = show.rs.getString("subjdesc");
            
            model.addRow(new String[]{
                subjectId, 
                code, 
                schedule, 
                units, 
                description
            });
        }
    } 
    catch (Exception ex) {
        System.err.println("Error loading assigned subjects: " + ex.getMessage());
    }
}
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TeacherGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TeacherGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TeacherGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TeacherGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TeacherGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Delete;
    private javax.swing.JButton Save;
    private javax.swing.JButton Update;
    private javax.swing.JButton assignSubj;
    private javax.swing.JTable assignTable;
    private javax.swing.JButton deleteSubj;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField teachAdd;
    private javax.swing.JTextField teachContact;
    private javax.swing.JTextField teachDept;
    private javax.swing.JTextField teachId;
    private javax.swing.JTextField teachName;
    private javax.swing.JTable teachTable;
    // End of variables declaration//GEN-END:variables
}
